{"name":"Material-datetime-picker","tagline":"A material design date-time picker ","body":"# Material Datetime Picker\r\n\r\n[![Status][status]](https://travis-ci.org/ripjar/material-datetime-picker) \r\n[![Package][npm]](https://www.npmjs.com/package/material-datetime-picker)\r\n\r\nA take on the material design date picker modal, built for the web.\r\n\r\nWorks well with Materialize, or standalone.\r\n\r\n![Time][date] ![Time][time]\r\n\r\n## Installation\r\n\r\n```\r\nnpm install material-datepicker\r\n```\r\n\r\n#### Dependencies\r\n\r\nThe picker depends on Google's Material Design icons (packaged with Materialize), or included in the `head` of the document;\r\n\r\n```html\r\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n```\r\n\r\n--- \r\n\r\nFor best results also include Google's Material Font `Roboto`;\r\n\r\n```html\r\n<link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>\r\n```\r\n\r\n---\r\n\r\n`Rome.js` and `moment` are required by the picker to handle date and time. \r\n\r\nIt is recommended to use the picker as an ES6 module using `import` or `require` (documented below). With this method the script will import it's own dependencies as required. \r\n\r\nAlternatively, there is a packaged script `/dist/js/datepicker.standalone.min.js`, which will include dependencies alongside the library code.\r\n\r\nTo include them yourself you can also use the dependency free version `/dist/js/datepicker.min.js`.\r\n\r\n## Usage\r\n\r\n### Manual (recommended)\r\n\r\nThe picker can be instantiated and interacted with manally;\r\n    \r\n```javascript\r\nimport MaterialDateTimePicker from 'material-datetime-picker';\r\n\r\nconst picker = new MaterialDateTimePicker()\r\n    .on('submit', (val) => console.log(`data: ${val}`))\r\n    .on('open', () => console.log('opened'))\r\n    .on('close', () => console.log('closed'));\r\n\r\ndocument.querySelector('.c-datepicker-btn')\r\n    .on('click', () => picker.open());        \r\n```\r\n\r\n---\r\n\r\n### As form input\r\n\r\nAlternatively, the picker can be attached to any element. Any events generated by the picker will be fired on this element. If an input element is chosen, the datepicker will open on focus by default, and populate the input with the chosen value.\r\n    \r\n```javascript\r\nimport MaterialDateTimePicker from 'material-datetime-picker';\r\n\r\nconst element = document.querySelector('.c-datepicker-input');\r\nconst picker = new MaterialDateTimePicker({\r\n    el: element\r\n    openedBy: 'focus'\r\n});\r\n```\r\n\r\n## Options\r\n    \r\nAll options are optional, including the `el`.\r\n\r\n```javascript\r\n{\r\n    // element to attach the datepicker. this element will receive \r\n    // events when the data changes. If an input element, will be \r\n    // populated with formatted date and time chosen\r\n    el: document.querySelector('.c-datepicker-btn'),\r\n    // if `el` is set, `openedBy` is the event on `el` that will\r\n    // open the picker, eg. `click` or `focus`\r\n    openedBy: 'focus',\r\n    // if `el` is set, the format used to display the datetime in the input, // or set as a data attribute\r\n    format: 'dd/MM/YY', \r\n    //  the default value of the picker\r\n    default: moment(),\r\n    // the container to append the picker\r\n    container: document.body,    \r\n    // cosmetic classes that can be overriden\r\n    // mostly used for styling the calendar\r\n    styles: {\r\n        scrim: 'c-scrim',\r\n        back: 'c-datepicker__back',\r\n        container: 'c-datepicker__calendar',\r\n        date: 'c-datepicker__date',\r\n        dayBody: 'c-datepicker__days-body',\r\n        dayBodyElem: 'c-datepicker__day-body',\r\n        dayConcealed: 'c-datepicker__day--concealed',\r\n        dayDisabled: 'c-datepicker__day--disabled',\r\n        dayHead: 'c-datepicker__days-head',\r\n        dayHeadElem: 'c-datepicker__day-head',\r\n        dayRow: 'c-datepicker__days-row',\r\n        dayTable: 'c-datepicker__days',\r\n        month: 'c-datepicker__month',\r\n        next: 'c-datepicker__next',\r\n        positioned: 'c-datepicker--fixed',\r\n        selectedDay: 'c-datepicker__day--selected',\r\n        selectedTime: 'c-datepicker__time--selected',\r\n        time: 'c-datepicker__time',\r\n        timeList: 'c-datepicker__time-list',\r\n        timeOption: 'c-datepicker__time-option',\r\n        clockNum: 'c-datepicker__clock__num'\r\n    },\r\n    // date range to allow (see rome validator factories)\r\n    dateValidator: null       \r\n}\r\n```\r\n\r\n## License\r\n\r\nMIT\r\n\r\n\r\n[date]: https://github.com/ripjar/material-datepicker/raw/master/demo/date.png \"Date select image\"\r\n[time]: https://github.com/ripjar/material-datepicker/raw/master/demo/time.png \"Time select image\"\r\n[status]: https://api.travis-ci.org/ripjar/material-datetime-picker.svg \"Build Status\"\r\n[npm]: https://img.shields.io/npm/v/material-datetime-picker.svg \"Package\"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}